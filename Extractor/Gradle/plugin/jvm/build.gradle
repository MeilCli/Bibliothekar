plugins {
    id 'java-gradle-plugin'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'io.gitlab.arturbosch.detekt'
    id 'net.meilcli.bibliothekar.toolchain.config.kotlin'
    id 'net.meilcli.bibliothekar.toolchain.config.detekt'
}

dependencies {
    implementation project(':core')
}

testing {
    suites {
        test {
            useKotlinTest()
        }

        functionalTest(JvmTestSuite) {
            useKotlinTest()

            dependencies {
                implementation project
            }

            targets {
                all {
                    testTask.configure { shouldRunAfter(test) }
                }
            }
        }
    }
}

gradlePlugin {
    plugins {
        jvm {
            id = 'net.meilcli.bibliothekar.extractor.plugin.jvm'
            implementationClass = 'net.meilcli.bibliothekar.extractor.plugin.jvm.BibliothekarPlugin'
        }
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)

tasks.withType(Test).configureEach {
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
    forkEvery = 10
}

tasks.named('check') {
    dependsOn(testing.suites.functionalTest)
}
