name: CI

on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:

jobs:
  build-gradle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: build-gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            build-gradle-${{ runner.os }}-
      - name: Grant permission
        run: chmod +x gradlew
      - run: ./gradlew assemble
      - run: ./gradlew testAll
  lint-gradle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: lint-gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            lint-gradle-${{ runner.os }}-
      - name: Grant permission
        run: chmod +x gradlew
      - run: ./gradlew detekt
      - run: mv build/reports/detekt/merge.xml detekt_report.xml
      - uses: actions/upload-artifact@v3
        with:
          name: detekt_result
          path: |
            detekt_report.xml
  build-node-js:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/cache@v3
        with:
          path: node_modules
          key: build-node-js-${{ runner.OS }}-${{ hashFiles('**/package.json', '**/package-lock.json') }}
          restore-keys: |
            build-node-js-${{ runner.OS }}-
      - run: npm install
      - run: npm run build
      - run: npm run test
  lint-node-js:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/cache@v3
        with:
          path: node_modules
          key: lint-node-js-${{ runner.OS }}-${{ hashFiles('**/package.json', '**/package-lock.json') }}
          restore-keys: |
            lint-node-js-${{ runner.OS }}-
      - run: npm install
      - run: npm run lint:report
      - uses: actions/upload-artifact@v3
        with:
          name: eslint_result
          path: |
            eslint_report.json
  build:
    runs-on: ubuntu-latest
    needs: [build-gradle, lint-gradle, build-node-js, lint-node-js]
    steps:
      - run: echo 'build success'
  approve:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]'
    steps:
      - id: metadata
        uses: dependabot/fetch-metadata@v1.1.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/github-script@v6
        if: steps.metadata.outputs.update-type == 'version-update:semver-patch' || steps.metadata.outputs.update-type == 'version-update:semver-minor'
        with:
          github-token: ${{ secrets.MEILCLI_BOT }}
          script: |
            github.rest.pulls.createReview(
              {
                pull_number: context.pull_request.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                event: 'approve'
              }
            )
